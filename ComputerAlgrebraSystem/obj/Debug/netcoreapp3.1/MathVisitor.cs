//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\madel\source\repos\ComputerAlgebraSystem\ComputerAlgrebraSystem\Grammar\Math.g4 by ANTLR 4.6.6-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ComputerAlgrebraSystem.Grammar {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MathParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IMathVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>division</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDivision([NotNull] MathParser.DivisionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parentheses</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParentheses([NotNull] MathParser.ParenthesesContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>number</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumber([NotNull] MathParser.NumberContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>function</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction([NotNull] MathParser.FunctionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>variable</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] MathParser.VariableContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>subtraction</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubtraction([NotNull] MathParser.SubtractionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>multiplicationNoAsterisk</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicationNoAsterisk([NotNull] MathParser.MultiplicationNoAsteriskContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>unary</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnary([NotNull] MathParser.UnaryContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>power</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPower([NotNull] MathParser.PowerContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>multiplication</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplication([NotNull] MathParser.MultiplicationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>addition</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddition([NotNull] MathParser.AdditionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>equationCompileUnit</c>
	/// labeled alternative in <see cref="MathParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquationCompileUnit([NotNull] MathParser.EquationCompileUnitContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>expressionCompileUnit</c>
	/// labeled alternative in <see cref="MathParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionCompileUnit([NotNull] MathParser.ExpressionCompileUnitContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>doubleParentheses</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoubleParentheses([NotNull] MathParser.DoubleParenthesesContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>variableNumber</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableNumber([NotNull] MathParser.VariableNumberContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>numberVariable</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberVariable([NotNull] MathParser.NumberVariableContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>multiplicationParentheses</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicationParentheses([NotNull] MathParser.MultiplicationParenthesesContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesesMultiplication</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesesMultiplication([NotNull] MathParser.ParenthesesMultiplicationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>variableParentheses</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableParentheses([NotNull] MathParser.VariableParenthesesContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>multiplicationVariable</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicationVariable([NotNull] MathParser.MultiplicationVariableContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesesNumber</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesesNumber([NotNull] MathParser.ParenthesesNumberContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesesVariable</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesesVariable([NotNull] MathParser.ParenthesesVariableContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>variableMultiplication</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableMultiplication([NotNull] MathParser.VariableMultiplicationContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>numberParentheses</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberParentheses([NotNull] MathParser.NumberParenthesesContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>variableVariable</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableVariable([NotNull] MathParser.VariableVariableContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MathParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompileUnit([NotNull] MathParser.CompileUnitContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MathParser.equation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquation([NotNull] MathParser.EquationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MathParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] MathParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MathParser.functionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionName([NotNull] MathParser.FunctionNameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MathParser.parenthesesExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesesExpression([NotNull] MathParser.ParenthesesExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MathParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicationExpression([NotNull] MathParser.MultiplicationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MathParser.numberExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberExpression([NotNull] MathParser.NumberExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MathParser.variableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableExpression([NotNull] MathParser.VariableExpressionContext context);
}
} // namespace ComputerAlgrebraSystem.Grammar
