//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\madel\source\repos\ComputerAlgebraSystem\ComputerAlgrebraSystem\Grammar\Math.g4 by ANTLR 4.6.6-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ComputerAlgrebraSystem.Grammar {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IMathListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class MathBaseListener : IMathListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>division</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivision([NotNull] MathParser.DivisionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>division</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivision([NotNull] MathParser.DivisionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>parentheses</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParentheses([NotNull] MathParser.ParenthesesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parentheses</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParentheses([NotNull] MathParser.ParenthesesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>number</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] MathParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>number</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] MathParser.NumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>function</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] MathParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>function</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] MathParser.FunctionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>variable</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] MathParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>variable</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] MathParser.VariableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>subtraction</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubtraction([NotNull] MathParser.SubtractionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>subtraction</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubtraction([NotNull] MathParser.SubtractionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicationNoAsterisk</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicationNoAsterisk([NotNull] MathParser.MultiplicationNoAsteriskContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicationNoAsterisk</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicationNoAsterisk([NotNull] MathParser.MultiplicationNoAsteriskContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>unary</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary([NotNull] MathParser.UnaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unary</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary([NotNull] MathParser.UnaryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>power</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPower([NotNull] MathParser.PowerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>power</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPower([NotNull] MathParser.PowerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>multiplication</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplication([NotNull] MathParser.MultiplicationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplication</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplication([NotNull] MathParser.MultiplicationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>addition</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddition([NotNull] MathParser.AdditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>addition</c>
	/// labeled alternative in <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddition([NotNull] MathParser.AdditionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>equationCompileUnit</c>
	/// labeled alternative in <see cref="MathParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquationCompileUnit([NotNull] MathParser.EquationCompileUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>equationCompileUnit</c>
	/// labeled alternative in <see cref="MathParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquationCompileUnit([NotNull] MathParser.EquationCompileUnitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>expressionCompileUnit</c>
	/// labeled alternative in <see cref="MathParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionCompileUnit([NotNull] MathParser.ExpressionCompileUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expressionCompileUnit</c>
	/// labeled alternative in <see cref="MathParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionCompileUnit([NotNull] MathParser.ExpressionCompileUnitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>doubleParentheses</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoubleParentheses([NotNull] MathParser.DoubleParenthesesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>doubleParentheses</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoubleParentheses([NotNull] MathParser.DoubleParenthesesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>variableNumber</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableNumber([NotNull] MathParser.VariableNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>variableNumber</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableNumber([NotNull] MathParser.VariableNumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>numberVariable</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberVariable([NotNull] MathParser.NumberVariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numberVariable</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberVariable([NotNull] MathParser.NumberVariableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicationParentheses</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicationParentheses([NotNull] MathParser.MultiplicationParenthesesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicationParentheses</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicationParentheses([NotNull] MathParser.MultiplicationParenthesesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesesMultiplication</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesesMultiplication([NotNull] MathParser.ParenthesesMultiplicationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesesMultiplication</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesesMultiplication([NotNull] MathParser.ParenthesesMultiplicationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>variableParentheses</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableParentheses([NotNull] MathParser.VariableParenthesesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>variableParentheses</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableParentheses([NotNull] MathParser.VariableParenthesesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicationVariable</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicationVariable([NotNull] MathParser.MultiplicationVariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicationVariable</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicationVariable([NotNull] MathParser.MultiplicationVariableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesesNumber</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesesNumber([NotNull] MathParser.ParenthesesNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesesNumber</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesesNumber([NotNull] MathParser.ParenthesesNumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesesVariable</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesesVariable([NotNull] MathParser.ParenthesesVariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesesVariable</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesesVariable([NotNull] MathParser.ParenthesesVariableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>variableMultiplication</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableMultiplication([NotNull] MathParser.VariableMultiplicationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>variableMultiplication</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableMultiplication([NotNull] MathParser.VariableMultiplicationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>numberParentheses</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberParentheses([NotNull] MathParser.NumberParenthesesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numberParentheses</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberParentheses([NotNull] MathParser.NumberParenthesesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>variableVariable</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableVariable([NotNull] MathParser.VariableVariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>variableVariable</c>
	/// labeled alternative in <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableVariable([NotNull] MathParser.VariableVariableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MathParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompileUnit([NotNull] MathParser.CompileUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompileUnit([NotNull] MathParser.CompileUnitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MathParser.equation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquation([NotNull] MathParser.EquationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathParser.equation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquation([NotNull] MathParser.EquationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] MathParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] MathParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MathParser.functionName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionName([NotNull] MathParser.FunctionNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathParser.functionName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionName([NotNull] MathParser.FunctionNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MathParser.parenthesesExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesesExpression([NotNull] MathParser.ParenthesesExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathParser.parenthesesExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesesExpression([NotNull] MathParser.ParenthesesExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicationExpression([NotNull] MathParser.MultiplicationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathParser.multiplicationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicationExpression([NotNull] MathParser.MultiplicationExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MathParser.numberExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberExpression([NotNull] MathParser.NumberExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathParser.numberExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberExpression([NotNull] MathParser.NumberExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MathParser.variableExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableExpression([NotNull] MathParser.VariableExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MathParser.variableExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableExpression([NotNull] MathParser.VariableExpressionContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace ComputerAlgrebraSystem.Grammar
